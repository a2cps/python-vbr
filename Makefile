API ?= https://a2cps-dev.tapis.io
USERNAME ?= $(A2CPS_USERNAME)
PASSWORD ?= $(A2CPS_PASSWORD)

deps:
	pip install pytest flake8 yapf

lint: deps
	# stop the build if there are Python syntax errors or undefined names
	flake8 src/vbr --count --select=E9,F63,F7,F82 --show-source --statistics
	# exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
	flake8 src/vbr --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

pytest: deps
	python -m pytest

tests: lint pytest

classfiles-clean:
	cd src ; python -m scripts.redcap_classfiles clean

classfiles:
	cd src ; python -m scripts.redcap_classfiles build; yapf -i --recursive vbr/tableclasses/redcap/autogenerated

definitions:
	cd src ; python -m scripts.definitions; mv -f *.json  ../files/

definitions-clean:
	rm -f files/*.json

clean: definitions-clean

create_tables:
	cd src ; python -m scripts.create_tables --base-url "$(API)" --username "$(USERNAME)" --password "$(PASSWORD)" $(SCRIPT_ARGS)

drop_tables:
	cd src ; python -m scripts.drop_tables --base-url "$(API)" --username "$(USERNAME)" --password "$(PASSWORD)" $(SCRIPT_ARGS)

bootstrap_tables:
	cd src ; python -m scripts.bootstrap_tables --base-url "$(API)" --username "$(USERNAME)" --password "$(PASSWORD)" $(SCRIPT_ARGS)

dump_tables: 
	cd src ; python -m scripts.dump_tables --base-url "$(API)" --username "$(USERNAME)" --password "$(PASSWORD)" $(SCRIPT_ARGS)

load_tables: 
	cd src ; python -m scripts.load_tables --base-url "$(API)" --username "$(USERNAME)" --password "$(PASSWORD)" $(SCRIPT_ARGS)

dump_tables-clean:
	cd exports; rm *.csv

clean_tables:
	cd src; echo "Cleaning: $(SCRIPT_ARGS)"

reset: drop_tables create_tables bootstrap_tables

dbml:
	mkdir -p files-dbml; cd src; python -m scripts.dbml build --dotfile; mv -f dbml.* ../files-dbml/

reformat-source:
	black src/vbr

reformat-scripts:
	black src/scripts

reformat: reformat-source reformat-scripts

isort-source:
	isort src/vbr

isort-scripts:
	isort src/scripts

isort: isort-source isort-scripts
